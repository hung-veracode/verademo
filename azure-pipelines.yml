# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java
# This is an example of using VeraDemo Java test application with the Veracode Static Pipeline scanner.  A Veracode subscription is required.
trigger:
- manual

pool:
  vmImage: 'ubuntu-latest'

steps:
- task: Maven@3
  displayName: Build with Maven
  inputs:
    mavenPomFile: 'app/pom.xml'
    mavenOptions: '-Xmx3072m'
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '1.8'
    jdkArchitectureOption: 'x64'
    publishJUnitResults: true
    testResultsFiles: '**/surefire-reports/TEST-*.xml'
    goals: 'clean package'

- task: Veracode@3
  displayName: Veracode Static Upload Scan
  inputs:
    ConnectionDetailsSelection: 'Service Connection'
    AnalysisService: 'Veracode'
    veracodeAppProfile: 'Verademo'
    version: '$(build.buildNumber)'
    filepath: '$(System.DefaultWorkingDirectory)/app/target/verademo.war'
    sandboxName: 'Azure DevOps'
    createProfile: false
    apiId: '$(VERACODE_API_ID)'
    apiKey: '$(VERACODE_API_KEY)'
    failBuildOnPolicyFail: false
    failBuildIfUploadAndScanBuildStepFails: false
    importResults: false
    maximumWaitTime: '360'

- task: Bash@3
  displayName: Veracode Pipeline Scan
  inputs:
    targetType: 'inline'
    script: |
      curl -sSO https://downloads.veracode.com/securityscan/pipeline-scan-LATEST.zip
      unzip -o pipeline-scan-LATEST.zip
      java -jar pipeline-scan.jar -vid $(VERACODE_API_ID) -vkey $(VERACODE_API_KEY) -f $(System.DefaultWorkingDirectory)/app/target/verademo.war || true
- publish: $(System.DefaultWorkingDirectory)/results.json
  artifact: VeracodeBaseline

- task: PowerShell@2
  displayName: Veracode Software Composition Analysis
  env:
    SRCCLR_API_TOKEN: $(SRCCLR_API_TOKEN)
  inputs:
    targetType: 'inline'
    script: |
      curl -sSL https://download.sourceclear.com/ci.sh | sh -s -- scan ./app
